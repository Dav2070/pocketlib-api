(var json (parse_json (get_body)))
(var status 201)

(# Get the jwt)
(var jwt (get_header Authorization))
(if (is_nil jwt) (
	(# Show error for missing jwt)
	(func render_errors ((list (get_error 2102)) 400))
))

(# Make sure content type is json)
(var content_type (get_header Content-Type))
(func validate_json (content_type))

(# Decode the jwt)
(var decoded_jwt (func validate_jwt (jwt)))

(# Validate missing fields)
(func render_validation_errors ((list 
	(func validate_first_name_missing (json.first_name)) 
	(func validate_last_name_missing (json.last_name))
	(func validate_bio_missing (json.bio))
)))

(# Validate field types)
(func render_validation_errors ((list
	(func validate_first_name_wrong_type (json.first_name))
	(func validate_last_name_wrong_type (json.last_name))
	(func validate_bio_wrong_type (json.bio))
)))

(# Validate too short and too long fields)
(func render_validation_errors ((list
	(func validate_first_name_too_short (json.first_name))
	(func validate_first_name_too_long (json.first_name))
	(func validate_last_name_too_short (json.last_name))
	(func validate_last_name_too_long (json.last_name))
	(func validate_bio_too_short (json.bio))
	(func validate_bio_too_long (json.bio))
)))

(# Check if the user is already an author)
(func render_validation_errors ((list
	(func validate_user_is_already_author (decoded_jwt.user_id))
)))