(# Get the jwt)
(var jwt (get_header Authorization))
(func render_validation_errors ((list
	(func validate_jwt_missing (jwt))
)))

(# Decode the jwt)
(var decoded_jwt (func decode_jwt (jwt)))

(# Validate the dev)
(func render_validation_errors ((list
	(func validate_dev_is_pocketlib_dev (decoded_jwt.dev_id))
)))

(# Get the author of the user)
(var authors (func get_author_table_objects (decoded_jwt.user_id)))
(if (authors.length == 0) (
	(# Render Resource does not exist: Author error)
	(func render_validation_errors ((list (hash (error (get_error 1105)) (status 400)))))
))

(var author authors#0)

(# Get the books of the author)
(var books_string author.properties.books)
(var books (list))

(if (!(is_nil books_string)) (
	(var book_uuids (books_string.split ","))

	(for uuid in book_uuids (
		(var book (TableObject.get uuid))
		
		(if (!(is_nil book)) (
			(books.push (hash (uuid book.uuid) (title book.properties.title)))
			(up books)
		))
		(up books)
	))
	(up books)
))

(# Return the author)
(var result (hash (uuid author.uuid) (first_name author.properties.first_name) (last_name author.properties.last_name) (bio author.properties.bio) (books books)))

(render_json result 200)