(var json (parse_json (get_body)))

(var first_name json.first_name)
(var last_name json.last_name)
(var bio json.bio)

(# Get the jwt)
(var jwt (get_header Authorization))
(func render_validation_errors ((list
	(func validate_jwt_missing (jwt))
)))

(# Make sure content type is json)
(func render_validation_errors ((list
	(func validate_content_type_json ((get_header Content-Type)))
)))

(# Decode the jwt)
(var decoded_jwt (func decode_jwt (jwt)))

(# Validate the dev)
(func render_validation_errors ((list
	(func validate_dev_is_pocketlib_dev (decoded_jwt.dev_id))
)))

(# Get the author of the user)
(var authors (func get_author_table_objects (decoded_jwt.user_id)))

(if (authors.length == 0) (
	(# Create the author)

	(# Validate missing fields)
	(func render_validation_errors ((list 
		(func validate_first_name_missing (first_name)) 
		(func validate_last_name_missing (last_name))
		(func validate_bio_missing (bio))
	)))

	(# Validate field types)
	(func render_validation_errors ((list
		(func validate_first_name_wrong_type (first_name))
		(func validate_last_name_wrong_type (last_name))
		(func validate_bio_wrong_type (bio))
	)))

	(# Validate too short and too long fields)
	(func render_validation_errors ((list
		(func validate_first_name_too_short (first_name))
		(func validate_first_name_too_long (first_name))
		(func validate_last_name_too_short (last_name))
		(func validate_last_name_too_long (last_name))
		(func validate_bio_too_short (bio))
		(func validate_bio_too_long (bio))
	)))

	(# Create the author table object)
	(var author (func create_author_table_object (decoded_jwt.user_id (hash (first_name first_name) (last_name last_name) (bio bio)))))
	(up author)
) else (
	(# Update the author)
	(var author authors#0)

	(# Validate the property types)
	(func render_validation_errors ((list
		(if (! (is_nil first_name)) (func validate_first_name_wrong_type (first_name)))
		(if (! (is_nil last_name)) (func validate_last_name_wrong_type (last_name)))
		(if (! (is_nil bio)) (func validate_bio_wrong_type (bio)))
	)))

	(# Validate the property length)
	(func render_validation_errors ((list
		(if (!(is_nil first_name)) (func validate_first_name_too_short (first_name)))
		(if (!(is_nil first_name)) (func validate_first_name_too_long (first_name)))
		(if (!(is_nil last_name)) (func validate_last_name_too_short (last_name)))
		(if (!(is_nil last_name)) (func validate_last_name_too_long (last_name)))
		(if (!(is_nil bio)) (func validate_bio_too_short (bio)))
		(if (!(is_nil bio)) (func validate_bio_too_long (bio)))
	)))

	(# Set the values)
	(if (! (is_nil first_name)) (var author.properties.first_name first_name))
	(if (! (is_nil last_name)) (var author.properties.last_name last_name))
	(if (! (is_nil bio)) (var author.properties.bio bio))

	(# Update the variables)
	(var first_name author.properties.first_name)
	(var last_name author.properties.last_name)
	(var bio author.properties.bio)

	(up author)
	(up first_name)
	(up last_name)
	(up bio)
))

(# Render the result)
(render_json (hash (uuid author.uuid) (first_name first_name) (last_name last_name) (bio bio)) 200)